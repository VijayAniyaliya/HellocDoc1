@model Services.Models.SearchRecordsViewModel

<table class="table  d-md-table d-none">
    <thead>
        <tr class="table-secondary">
            <th scope="col">Patient Name</th>
            <th scope="col">Requestor</th>
            <th scope="col">Date Of Services</th>
            <th scope="col">Close Case Date</th>
            <th scope="col">Email</th>
            <th scope="col">Phone Number</th>
            <th scope="col">Address</th>
            <th scope="col">Zip</th>
            <th scope="col">Request Status</th>
            <th scope="col">Physician</th>
            <th scope="col">Physician Notes</th>
            <th scope="col">Cancelled By Provider Notes</th>
            <th scope="col">Admin Notes</th>
            <th scope="col">Patient Notes</th>
            <th class="text-center" scope="col">Delete Permanently</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.requestClients)
        {

            <tr>
                <td>@item.FirstName, @item.LastName</td>
                <td>@Enum.Parse(typeof(Common.Enum.RequestType), @item.Request.RequestTypeId.ToString())</td>
                <td>Date Of Service</td>
                <td>@item.Request.RequestStatusLogs.FirstOrDefault(a=> a.Status == 6)?.CreatedDate.ToString("MMM dd yyyy")</td>
                <td>@item.Email</td>
                <td>@item.PhoneNumber</td>
                <td>@item.Street, @item.City, @item.State</td>
                <td>@item.ZipCode</td>
                <td>@Enum.Parse(typeof(Common.Enum.RequestStatus), @item.Request.RequestTypeId.ToString())</td>
                <td>@item.Request.Physician?.FirstName</td>
                <td>@item.Request.RequestNotes.FirstOrDefault(a=> a.RequestId == item.Request.RequestId)?.PhysicianNotes</td>
                <td>Cancel Notes</td>
                <td>@item.Request.RequestNotes.FirstOrDefault(a=> a.RequestId == item.Request.RequestId)?.AdminNotes</td>
                <td>@item.Notes</td>
                <td class="text-center">
                    <a asp-action=""  class="btn text-info border-2 border-info fw-bold rounded-3 px-2 h5 ">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>

@if (Model.TotalPage > 1)
{
    <div class="page-container">
        <ul class="pagination justify-content-center d-flex page-list">
            <li class="page-item @(Model.CurrentPage <= 1 ? "d-none" : "")">
                <a class="page-link border-0 m-2" onclick="changepage(@Model.CurrentPage - 1)"><i class="bi bi-chevron-double-left text-info page"></i></a>
            </li>
            @for (int CurrentPage = 1; CurrentPage <= Model.TotalPage; CurrentPage++)
            {
                <li class="m-2 btn @(CurrentPage == Model.CurrentPage ? "page-active" : "")" onclick="changepage(@CurrentPage)"><a class="text-decoration-none text-black curent-page-index" data-page="@CurrentPage">@CurrentPage</a></li>
            }
            <li class="page-item  @(Model.CurrentPage == Model.TotalPage ? "d-none" : "")">
                <a class="page-link border-0 m-2" onclick="changepage(@Model.CurrentPage + 1)"><i class="bi bi-chevron-double-right text-info page"></i></a>
            </li>
        </ul>

    </div>
}
else if (Model.TotalPage == 1)
{
}
else
{
    <div class="text-center text-danger fw-bold h5">No record found</div>
}